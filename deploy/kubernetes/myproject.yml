---
apiVersion: v1
kind: Namespace
metadata:
  name: default
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mini-app
  labels:
    app: mini-app
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mini-app
      
  template:
    metadata:
      labels:
        app: mini-app
        
    spec:
      containers:
      - name: mini-app
        image: tomiodozi/mini-project-app:v1
        resources:
          limits:
            memory: "200Mi"
            cpu: "300m"
        ports: 
            - containerPort: 80
        livenessProbe:
          httpGet:
            path: /
            port: 8079
          initialDelaySeconds: 300
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /
            port: 8079
          initialDelaySeconds: 30
          periodSeconds: 3

---
apiVersion: v1
kind: Service
metadata:
  name: mini-app
  annotations:
        prometheus.io/scrape: 'true'
  labels:
    app: mini-app
  namespace: default
spec:
  type: LoadBalancer
  selector:
    app: mini-app
  ports:
  - protocol: TCP
    port: 80 
    targetPort: 80
    nodePort: 31105
    
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret-config
  namespace: default
type: Opaque
data:
  password: cGFzc3dvcmQK

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv-volume
  labels:
    type: local
  namespace: default
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
  namespace: default
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      volumes:
        - name: postgres-pv-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
      containers:
        - name: postgres
          image: postgres:11
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "128Mi"
              cpu: "300m"
          ports:
            - containerPort: 5432 
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret-config
                  key: password
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
              - mountPath: /var/lib/postgresql/data
                name: postgres-pv-storage

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
  namespace: default
spec:
  type: NodePort
  ports:
   - protocol: TCP 
     port: 5432
     targetPort: 5432
     nodePort: 32221
  selector:
    app: postgres
        